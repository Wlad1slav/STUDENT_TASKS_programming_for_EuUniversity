#########
# While #
#########
################################
# Завдання 1. Список квадратів #
################################
def squares(N):
    i = 0
    while i <= N:
        print(i**2)
        i+=1

###################################
# Завдання 2. Мінімальний дільник #
###################################
def minimum_divide(num):
    i = 2
    while num % i != 0: i+=1
    print(i)

######################################
# Завдання 3. Список ступенів двійки #
######################################
def list_squares(N):
    i = 1
    while i < N:
        print(i)
        i*=2

#####################################
# Завдання 4. Точний ступінь двійки #
#####################################
def exact_pow_two(N):
    i = 1
    while i < N: i *= 2
    if i == N: print("YES")
    else: print("NO")

##################################
# Завдання 5. Двійковий логарифм #
##################################
def logarithm(N): 
    val = 0
    while 2 ** val < N: val += 1
    print(val)

################################
# Завдання 6. Ранкова пробіжка #
################################
def morning_running(x, y):
    days = 1
    while x < y:
        x += (x / 100 * 10)
        days += 1
    print(days)
    
################################
# Завдання 7. Ранкова пробіжка #
################################
def bank(x, p, y):
    years = 0
    while x <= y:
        x += (x / 100 * p)
        years += 1
    print(years)
        
###############################
# Завдання 8. Числа Фібоначчі #
###############################
def Fibonachi(n):
    x = 1; y = 1
    i = 0
    while i < (n - 2):
        sum = x + y
        x = y; y = sum
        i += 1
    print(sum)

#####################################
# Завдання 9. Номер числа Фібоначчі #
#####################################
#-

#######################################
# Завдання 10. Виконавець Роздвічувач #
#######################################
def divider(A, B):
    while A != B:
        if (A / 2 >= B) and (A % 2) == 0:
            A /= 2
            print(':2')
        else:
            A -= 1
            print('-1')
            
###################################
# Завдання 11. Виконавець Водолій #
###################################
#-
            
#####################################
# Задание 12. Довжина послідовності #
#####################################
def sequence_length():
    val = 0
    while int(input()) != 0: val += 1
    print(f"\n{val}")
    
###################################
# Завдання 13. Сума послідовності #
###################################
def sequence_sum():
    sum = 0; num = 1
    while num != 0:
        num = int(input())
        sum += num
    print(f"\n{sum}")
        
###############################################
# Завдання 14. Середнє значення послідовності #
###############################################
def sequence_average():
    sum = 0; num = 1; val = 0
    while num != 0:
        num = int(input())
        if num != 0: sum += num; val += 1
    print(f"\n{sum/val}")
    
#########################################################
# Завдання 15. Кількість парних елементів послідовності #
#########################################################
def sequence_paired():
    sum = 0; num = 1; val = 0
    while num != 0:
        num = int(input())
        if num != 0 and num % 2 == 0: val += 1
    print(f"\n{val}")

#######################################
# Завдання 16. Максимум послідовності #
#######################################
def sequence_max():
    # sequence = []; num = 1
    # while num != 0:
    #     num = int(input())
    #     sequence.append(num)
    # print(f"\n{max(sequence)}")
    num = int(input())
    max = num
    while num != 0:
        num = int(input())
        if num > max: max = num
    print(f"\n{max}")
    
#############################################################
# Завдання 17. Кількість елементів, які більші за попередні #
#############################################################
#-

################################
# Завдання 18. Другий максимум #
################################
def sequence_second_max():
    num = int(input())
    max = num; max2 = 0
    while num != 0:
        num = int(input())
        if num > max: 
            max2 = max
            max = num
        elif num > max2: max2 = num
    print(f"\n{max2}")

####################################
# Завдання 19. Другий максимум – 2 #
####################################
def sequence_second_max_again():
    num = int(input())
    max = num; max2 = 0
    while num != 0:
        num = int(input())
        if num > max: 
            max2 = max
            max = num
        elif num > max2: max2 = num
    print(f"\n{max2}")

#########################################################
# Завдання 20-21. Кількість елементів, рівних максимуму #
#########################################################
def sequence_sum_maxs():
    num = int(input())
    max = num; value = 0
    while num != 0:
        num = int(input())
        if num > max: 
            max = num
            value = 0
        if num == max: value += 1
    print(f"\n{value}")

#######################################
# Завдання 22. Сума послідовності - 2 #
#######################################
def sequence_sum_zero_zero():
    num = int(input())
    sum = 0
    while num != 0:
        sum += num
        num = int(input())
        if num == 0: num = int(input())
    print(f"\n{sum}")

########################################################################
# Завдання 23. Максимальна кількість рівних елементів, що йдуть підряд #
########################################################################
def sequence_row():
    num = int(input())
    value = 1; last = 0
    while num != 0:
        if last == num: value += 1
        last = num
        num = int(input())
    if value == 1: value = 0
    print(f"\n{value}")

##########################################################
# Завдання 24. Максимальна довжина монотонного фрагмента #
##########################################################
def sequence_row_again():
    num = int(input())
    value = 1; last = 0
    while num != 0:
        if last == num: value += 1
        last = num
        num = int(input())
    if value == 1: value = 0
    print(f"\n{value}")

###############################################
# Завдання 25. Кількість локальних максимумів #
###############################################
def sequence_num_max():
    num = int(input())
    max = num; value = 0
    
    while num != 0:
        num = int(input())
        if num > max: 
            max = num
            value = 0
        elif num == max: 
            if value == 0: value += 2
            else: value += 1
    print(f"\n{value}")


if __name__ == "__main__": 
    print("Use main.py, bla-bla-bla")